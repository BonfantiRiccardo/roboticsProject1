ODOMETRY TYPE
# This represents an estimate of a position and velocity in free space.  
# The pose in this message should be specified in the coordinate frame given by header.frame_id.
# The twist in this message should be specified in the coordinate frame given by the child_frame_id
Header header
string child_frame_id
geometry_msgs/PoseWithCovariance pose
geometry_msgs/TwistWithCovariance twist

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

HEADER TYPE
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

-----------------------------------------------------------------------------------------------------------------------------------------

POSE WITH COVARIANCE TYPE
# This represents a pose in free space with uncertainty.
Pose pose

# Row-major representation of the 6x6 covariance matrix
# The orientation parameters use a fixed-axis representation.
# In order, the parameters are:
# (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)
float64[36] covariance
----------------------------------------------------------------------------------------------
POSE TYPE
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation
-----------------------------------------------------------------------
POINT TYPE
# This contains the position of a point in free space
float64 x
float64 y
float64 z
-----------------------------------------------------------------------
QUATERNION TYPE
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

-----------------------------------------------------------------------------------------------------------------------------------------

TWIST WITH COVARIANCE TYPE
# This expresses velocity in free space with uncertainty.

Twist twist

# Row-major representation of the 6x6 covariance matrix
# The orientation parameters use a fixed-axis representation.
# In order, the parameters are:
# (x, y, z, rotation about X axis, rotation about Y axis, rotation about Z axis)
float64[36] covariance
----------------------------------------------------------------------------------------------
TWIST TYPE
# This expresses velocity in free space broken into its linear and angular parts.
Vector3  linear
Vector3  angular
-----------------------------------------------------------------------
VECTOR3 TYPE
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z